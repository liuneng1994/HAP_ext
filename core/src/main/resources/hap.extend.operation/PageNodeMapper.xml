<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ #{copyright}#
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hap.extend.core.operation.mapper.PageNodeMapper" >
    <resultMap id="BaseResultMap" type="hap.extend.core.operation.dto.PageNode" extends="com.hand.hap.mapper.StdMapper.STD" >
        <id column="FUNCTION_ID" property="functionId"/>
        <result column="FUNCTION_NAME" property="functionName"/>
        <result column="RESOURCE_ID" property="resourceId"/>
        <result column="RESOURCE_NAME" property="resourceName"/>
        <result column="URL" property="url"/>

        <collection property="children_temp1" column="FUNCTION_ID" select="getChildren_1" javaType="java.util.List"
                    ofType="hap.extend.core.operation.dto.PageNode">
        </collection>
        <collection property="children_temp2" column="FUNCTION_ID" select="getChildren_2" javaType="java.util.List"
                    ofType="hap.extend.core.operation.dto.PageNode">
        </collection>
    </resultMap>

    <resultMap id="resourceMap" type="hap.extend.core.operation.dto.PageNode" extends="com.hand.hap.mapper.StdMapper.STD" >
        <result column="RESOURCE_ID" property="resourceId"/>
        <result column="RESOURCE_NAME" property="resourceName"/>
        <result column="URL" property="url"/>
    </resultMap>

    <select id="selectAllPageNode" resultMap="BaseResultMap">
        SELECT
         bt.FUNCTION_ID AS FUNCTION_ID,
         tl.FUNCTION_NAME AS FUNCTION_NAME,
         res_b.URL AS URL,
         bt.RESOURCE_ID AS RESOURCE_ID,
         res_tl.NAME AS RESOURCE_NAME
        FROM
         SYS_FUNCTION_B bt JOIN SYS_FUNCTION_TL tl ON tl.FUNCTION_ID=bt.FUNCTION_ID
         JOIN SYS_RESOURCE_B res_b ON res_b.RESOURCE_ID=bt.RESOURCE_ID
         JOIN SYS_RESOURCE_TL res_tl ON res_tl.RESOURCE_ID=bt.RESOURCE_ID
        WHERE isNull(bt.PARENT_FUNCTION_ID)
        AND tl.LANG= #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
        AND res_tl.LANG = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
    </select>

    <select id="getChildren_1" parameterType="long" resultMap="BaseResultMap">
        SELECT
         bt.FUNCTION_ID AS FUNCTION_ID,
         tl.FUNCTION_NAME AS FUNCTION_NAME,
         res_b.URL AS URL,
         bt.RESOURCE_ID AS RESOURCE_ID,
         res_tl.NAME AS RESOURCE_NAME
        FROM
         SYS_FUNCTION_B bt JOIN SYS_FUNCTION_TL tl ON tl.FUNCTION_ID=bt.FUNCTION_ID
         JOIN SYS_RESOURCE_B res_b ON res_b.RESOURCE_ID=bt.RESOURCE_ID
         JOIN SYS_RESOURCE_TL res_tl ON res_tl.RESOURCE_ID=bt.RESOURCE_ID
        WHERE tl.LANG = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
        AND res_tl.LANG = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
        AND bt.PARENT_FUNCTION_ID = #{id}
    </select>

    <select id="getChildren_2" parameterType="long" resultMap="resourceMap">
        SELECT
        res_b.RESOURCE_ID AS RESOURCE_ID,
        res_b.URL AS URL,
        res_tl.NAME AS RESOURCE_NAME
        FROM SYS_FUNCTION_RESOURCE fr,
        SYS_RESOURCE_B res_b JOIN SYS_RESOURCE_TL res_tl ON res_b.RESOURCE_ID = res_tl.RESOURCE_ID
        WHERE
        fr.FUNCTION_ID = #{id}
        AND res_b.RESOURCE_ID = fr.RESOURCE_ID
        AND res_tl.LANG = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
    </select>
</mapper>